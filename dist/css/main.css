@charset "UTF-8";
/*! sanitize.css v7.0.2 | CC0 License | github.com/csstools/sanitize.css */
/* Document
 * ========================================================================== */
/**
 * 1. Remove repeating backgrounds in all browsers (opinionated).
 * 2. Add border box sizing in all browsers (opinionated).
 */
*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  box-sizing: border-box;
  /* 2 */ }

/**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

/**
  * 1. Use the default cursor in all browsers (opinionated).
  * 2. Use the default user interface font in all browsers (opinionated).
  * 3. Correct the line height in all browsers.
  * 4. Use a 4-space tab width in all browsers (opinionated).
  * 5. Prevent adjustments of font size after orientation changes in
  *    IE on Windows Phone and in iOS.
  * 6. Breaks words to prevent overflow in all browsers (opinionated).
  */
html {
  cursor: default;
  /* 1 */
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Oxygen, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 2 */
  line-height: 1.15;
  /* 3 */
  -moz-tab-size: 4;
  /* 4 */
  tab-size: 4;
  /* 4 */
  -ms-text-size-adjust: 100%;
  /* 5 */
  -webkit-text-size-adjust: 100%;
  /* 5 */
  word-break: break-word;
  /* 6 */ }

/* Sections
  * ========================================================================== */
/**
  * Remove the margin in all browsers (opinionated).
  */
body {
  margin: 0; }

/**
  * Correct the font size and margin on `h1` elements within `section` and
  * `article` contexts in Chrome, Firefox, and Safari.
  */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
  * ========================================================================== */
/**
  * 1. Add the correct sizing in Firefox.
  * 2. Show the overflow in Edge and IE.
  */
hr {
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
  * Add the correct display in IE.
  */
main {
  display: block; }

/**
  * Remove the list style on navigation lists in all browsers (opinionated).
  */
nav ol,
nav ul {
  list-style: none; }

/**
  * 1. Use the default monospace user interface font
  *    in all browsers (opinionated).
  * 2. Correct the odd `em` font sizing in all browsers.
  */
pre {
  font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Oxygen Mono, Liberation Mono, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
  * ========================================================================== */
/**
  * Remove the gray background on active links in IE 10.
  */
a {
  background-color: transparent; }

/**
  * Add the correct text decoration in Edge, IE, Opera, and Safari.
  */
abbr[title] {
  text-decoration: underline;
  text-decoration: underline dotted; }

/**
  * Add the correct font weight in Chrome, Edge, and Safari.
  */
b,
strong {
  font-weight: bolder; }

/**
  * 1. Use the default monospace user interface font
  *    in all browsers (opinionated).
  * 2. Correct the odd `em` font sizing in all browsers.
  */
code,
kbd,
samp {
  font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Oxygen Mono, Liberation Mono, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
  * Add the correct font size in all browsers.
  */
small {
  font-size: 80%; }

/*
  * Remove the text shadow on text selections in Firefox 61- (opinionated).
  * 1. Restore the coloring undone by defining the text shadow
  *    in all browsers (opinionated).
  */

::selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000;
  /* 1 */
  text-shadow: none; }

/* Embedded content
  * ========================================================================== */
/*
  * Change the alignment on media elements in all browers (opinionated).
  */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/**
  * Add the correct display in IE 9-.
  */
audio,
video {
  display: inline-block; }

/**
  * Add the correct display in iOS 4-7.
  */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
  * Remove the border on images inside links in IE 10-.
  */
img {
  border-style: none; }

/**
  * Change the fill color to match the text color in all browsers (opinionated).
  */
svg {
  fill: currentColor; }

/**
  * Hide the overflow in IE.
  */
svg:not(:root) {
  overflow: hidden; }

/* Tabular data
  * ========================================================================== */
/**
  * Collapse border spacing in all browsers (opinionated).
  */
table {
  border-collapse: collapse; }

/* Forms
  * ========================================================================== */
/**
  * Inherit styling in all browsers (opinionated).
  */
button,
input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

/**
  * Remove the margin in Safari.
  */
button,
input,
select {
  margin: 0; }

/**
  * 1. Show the overflow in IE.
  * 2. Remove the inheritance of text transform in Edge, Firefox, and IE.
  */
button {
  overflow: visible;
  /* 1 */
  text-transform: none;
  /* 2 */ }

/**
  * Correct the inability to style clickable types in iOS and Safari.
  */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
  * Correct the padding in Firefox.
  */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
  * Show the overflow in Edge and IE.
  */
input {
  overflow: visible; }

/**
  * 1. Correct the text wrapping in Edge and IE.
  * 2. Correct the color inheritance from `fieldset` elements in IE.
  */
legend {
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  white-space: normal;
  /* 1 */ }

/**
  * 1. Add the correct display in Edge and IE.
  * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
  */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
  * Remove the inheritance of text transform in Firefox.
  */
select {
  text-transform: none; }

/**
  * 1. Remove the margin in Firefox and Safari.
  * 2. Remove the default vertical scrollbar in IE.
  * 3. Change the resize direction on textareas in all browsers (opinionated).
  */
textarea {
  margin: 0;
  /* 1 */
  overflow: auto;
  /* 2 */
  resize: vertical;
  /* 3 */ }

/**
  * Remove the padding in IE 10-.
  */
[type="checkbox"],
[type="radio"] {
  padding: 0; }

/**
  * 1. Correct the odd appearance in Chrome and Safari.
  * 2. Correct the outline style in Safari.
  */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
  * Correct the cursor style of increment and decrement buttons in Safari.
  */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

/**
  * Correct the text style of placeholders in Chrome, Edge, and Safari.
  */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
  * Remove the inner padding in Chrome and Safari on macOS.
  */
::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
  * 1. Correct the inability to style clickable types in iOS and Safari.
  * 2. Change font properties to `inherit` in Safari.
  */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
  * Remove the inner border and padding of focus outlines in Firefox.
  */
::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
  * Restore the focus outline styles unset by the previous rule in Firefox.
  */
:-moz-focusring {
  outline: 1px dotted ButtonText; }

/* Interactive
  * ========================================================================== */
/*
  * Add the correct display in Edge and IE.
  */
details {
  display: block; }

/*
  * Add the correct styles in Edge, IE, and Safari.
  */
dialog {
  background-color: white;
  border: solid;
  color: black;
  display: block;
  height: -moz-fit-content;
  height: -webkit-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: -webkit-fit-content;
  width: fit-content; }

dialog:not([open]) {
  display: none; }

/*
  * Add the correct display in all browsers.
  */
summary {
  display: list-item; }

/* Scripting
  * ========================================================================== */
/**
  * Add the correct display in IE 9-.
  */
canvas {
  display: inline-block; }

/**
  * Add the correct display in IE.
  */
template {
  display: none; }

/* User interaction
  * ========================================================================== */
/*
  * 1. Remove the tapping delay on clickable elements
       in all browsers (opinionated).
  * 2. Remove the tapping delay in IE 10.
  */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation;
  /* 2 */ }

/**
  * Add the correct display in IE 10-.
  */
[hidden] {
  display: none; }

/* Accessibility
  * ========================================================================== */
/**
  * Change the cursor on busy elements in all browsers (opinionated).
  */
[aria-busy="true"] {
  cursor: progress; }

/*
  * Change the cursor on control elements in all browsers (opinionated).
  */
[aria-controls] {
  cursor: pointer; }

/*
  * Change the cursor on disabled, not-editable, or otherwise
  * inoperable elements in all browsers (opinionated).
  */
[aria-disabled],
[disabled] {
  cursor: disabled; }

/*
  * Change the display on visually hidden accessible elements
  * in all browsers (opinionated).
  */
[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

:root, html, body {
  font-family: 'Raleway', sans-serif;
  color: #474747;
  width: 100%; }

* {
  box-sizing: border-box; }

li {
  list-style-type: none; }

a {
  color: #474747;
  text-decoration: none; }

a:hover {
  color: #474747; }

.l-column {
  max-width: 1540px;
  margin: 0 auto; }

.button {
  line-height: 50px;
  display: inline-block;
  padding: 12px 120px;
  text-transform: uppercase;
  letter-spacing: 5px;
  text-align: center;
  background: url(/dist/images/waku-01.png) left top/15px 15px no-repeat, url(/dist/images/waku-02.png) right top/15px 15px no-repeat, url(/dist/images/waku-03.png) left bottom/15px 15px no-repeat, url(/dist/images/waku-04.png) right bottom/15px 15px no-repeat #FFF;
  box-sizing: border-box;
  transition: all .3s;
  outline: none;
  position: relative;
  z-index: 2; }
  .button:hover {
    background: url(/dist/images/waku-01.png) left top/15px 15px no-repeat, url(/dist/images/waku-02.png) right top/15px 15px no-repeat, url(/dist/images/waku-03.png) left bottom/15px 15px no-repeat, url(/dist/images/waku-04.png) right bottom/15px 15px no-repeat #f7f1ad;
    transition: all .2s;
    text-decoration: none; }
    .button:hover::before, .button:hover::after {
      width: 0;
      background-color: #f7f1ad; }
  .button::before, .button::after {
    position: absolute;
    z-index: -1;
    display: block;
    content: '';
    width: 50%;
    height: 100%;
    background-color: #FFF;
    box-sizing: border-box;
    transition: all .3s; }
  .button::before {
    top: 0;
    right: 15px; }
  .button::after {
    bottom: 0;
    left: 15px; }

.title {
  font-family: 'Raleway', sans-serif;
  font-size: 40px;
  text-transform: uppercase;
  letter-spacing: 8px; }

.Section {
  margin-bottom: 200px; }

.KeyVisual {
  position: relative;
  margin-top: 100px; }
  .KeyVisual__title {
    position: absolute;
    bottom: 15%;
    right: 0;
    left: 0;
    text-align: center;
    font-size: 17px;
    letter-spacing: 22px; }
  .KeyVisual__title::before {
    content: '';
    display: block;
    border-bottom: 1px solid #474747;
    width: 100px;
    margin: 0 auto 23px; }
  .KeyVisual__mainImage {
    max-width: 100%;
    display: block;
    margin: 0 auto; }

.Works {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  .Works__head {
    -ms-flex: 1 1 30%;
        flex: 1 1 30%; }
  .Works__body {
    display: -ms-flexbox;
    display: flex;
    -ms-flex: 1 1 70%;
        flex: 1 1 70%;
    -ms-flex-direction: column;
        flex-direction: column; }
    .Works__body__body {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: center;
          justify-content: center; }
    .Works__body__foot {
      text-align: center;
      margin-top: 80px; }
  .Works__item {
    margin-right: 70px;
    text-transform: uppercase;
    letter-spacing: 5px;
    text-align: center; }
    .Works__item:last-child {
      margin-right: 0; }
  .Works__thumb {
    display: block; }
  .Works__title {
    margin-top: 30px;
    font-size: 12px; }

.Portfolio {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row-reverse;
      flex-flow: row-reverse; }
  .Portfolio__head {
    -ms-flex: 1 1 25%;
        flex: 1 1 25%; }
  .Portfolio__body {
    -ms-flex: 1 1 75%;
        flex: 1 1 75%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: start;
        justify-content: flex-start; }
  .Portfolio__foot {
    margin-top: 30px;
    text-align: center; }
  .Portfolio__item {
    margin-right: 40px;
    margin-bottom: 80px;
    letter-spacing: 5px;
    /*
        &:last-child {
            margin-right: 0;
        }
        */ }
  .Portfolio__thumb {
    display: block;
    background-color: #f7f0f0; }
  .Portfolio__title {
    margin-top: 25px; }

.more {
  text-transform: uppercase;
  letter-spacing: 5px;
  position: relative;
  display: inline-block;
  vertical-align: middle; }
  .more::after {
    content: '';
    display: inline-block;
    width: 100px;
    height: 25px;
    background: url(/dist/images/yajirushi.jpg) no-repeat;
    background-size: contain;
    margin-left: 25px; }

.About {
  display: -ms-flexbox;
  display: flex;
  position: relative; }
  .About__sub {
    -ms-flex: 1 1 35%;
        flex: 1 1 35%; }
  .About__main {
    -ms-flex: 1 1 65%;
        flex: 1 1 65%;
    -ms-flex-pack: end;
        justify-content: flex-end;
    background-color: #f7f0f0; }
  .About__head {
    padding-top: 50px;
    padding-left: 100px; }
  .About__body {
    padding-left: 100px; }
  .About__foot {
    text-align: center;
    padding: 40px 0 60px; }
    .About__foot i {
      padding: 0 35px; }
  .About__thumb {
    display: block;
    position: absolute;
    top: -50px;
    width: 580px;
    height: 400px;
    background-color: gray; }
  .About__name {
    padding-top: 20px;
    margin-bottom: 30px;
    font-family: 'ヒラギノ角ゴ ProN W6';
    line-height: 25px;
    font-weight: 600; }
  .About__profile {
    margin-bottom: 30px;
    font-family: 'ヒラギノ角ゴ ProN W3';
    line-height: 25px; }
  .About .fab {
    font-size: 40px;
    color: gray; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
